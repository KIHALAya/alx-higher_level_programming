========================
How to Use matrix_divided
========================

This module defines the function `matrix_divided(matrix, div)` which performs division on all elements in the given matrix.

Overview
========

The `matrix_divided()` function divides each element in a matrix by a provided divisor, returning a new matrix.

Usage
=====

To use the function:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Rounded to two decimal places.

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix remains unchanged.

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

The function handles both integers and floating-point numbers.

>>> matrix = [
...     [1.1, -2.2, 3.3],
...     [4.4, 5.5, -6.6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Supports a combination of integers and floats.

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.00, 8, 9.999, 10]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
===============

The input parameter, 'matrix', must be a list of lists consisting solely of integers or floats. If 'matrix' is not a list, it raises a TypeError.

>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

...

The same TypeError is raised if 'matrix' is not a list of lists.

...

Invalid Divisors
================

The parameter 'div' must be an int or float; otherwise, it raises a TypeError.

...

'div' must also be non-zero; otherwise, it raises a ZeroDivisionError.

...


