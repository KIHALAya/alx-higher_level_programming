===========================
How to Use 0-add_integer.py
===========================

This module defines the function ``add_integer(a, b=98)`` which performs integer addition.

Overview
========

The ``add_integer()`` function adds two numbers, treating float arguments as integers for addition.
When using this function, remember that float values are cast to integers before addition is performed.

Usage
=====

Using the function:

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 3)
5

>>> add_integer(2, -3)
-1

>>> add_integer(2.0, 3.0)
5

>>> add_integer(2.9, 0.2)
2

>>> add_integer(-2.9, -0.2)
-2

>>> add_integer(2.3, -3)
-1

The function can handle a single argument, with the second being optional:

>>> add_integer(2)
100

Non-Integer and Non-Float Inputs
================================

The ``add_integer()`` function expects both arguments to be either integers or floats.
 If non-numeric arguments are provided, a TypeError is raised:

>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer

If both arguments are non-numeric, a TypeError is only displayed for the first argument:

>>> add_integer("hello", "there")
Traceback (most recent call last):
TypeError: a must be an integer

Infinity and NaN Considerations
===============================

The function will fail if infinity is provided:

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

Similarly, NaN (Not-a-Number) is not supported:

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

